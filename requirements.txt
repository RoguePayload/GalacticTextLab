# Essential system libraries
# os         # Operating system dependent functionality
# time       # Time access and conversions
asyncio    # Asynchronous I/O, event loop, coroutines, and tasks

# HTTP client for asynchronous requests
aiohttp    # Asynchronous HTTP client/server framework for Python

# Matplotlib for creating static, animated, and interactive visualizations in Python
matplotlib    # Comprehensive library for creating static, animated, and interactive visualizations in Python

# Pandas for data manipulation and analysis
pandas    # Fast, powerful, flexible, and easy-to-use open-source data analysis and manipulation library

# NumPy for advanced mathematical operations
numpy    # Fundamental package for scientific computing with Python

# SciPy for additional scientific computations
scipy    # Open-source software for mathematics, science, and engineering

# SymPy for symbolic mathematics
sympy    # Symbolic mathematics in Python

# Requests for making HTTP requests
requests    # Simple, yet elegant HTTP library for Python

# Colorama for cross-platform colored terminal text
colorama    # Simple cross-platform colored terminal text in Python

# BeautifulSoup for parsing HTML and XML documents
beautifulsoup4    # Library for parsing HTML and XML documents

# lxml for processing XML and HTML
lxml    # Powerful and easy-to-use library for processing XML and HTML in Python

# Pytest for testing
pytest    # Framework that makes building simple and scalable test cases easy

# JSON library for JSON processing
# json    # Built-in Python library for parsing and handling JSON data

# SQLAlchemy for database access
sqlalchemy    # SQL toolkit and Object-Relational Mapping (ORM) library for Python

# Environment variable management
python-dotenv    # Reads key-value pairs from a .env file and can set them as environment variables

# Logging for detailed application logging
# logging    # Built-in Python module for logging

# NASA API wrapper (if one exists or custom implementation)
nasa-api    # (Include a custom or third-party library if available for NASA API integration)

# IBM Watson Developer Cloud SDK
ibm-watson    # Client library to use the IBM Watson services in Python applications

# Flask for lightweight web applications (optional)
# flask    # Lightweight WSGI web application framework in Python

# Dash for web-based interactive visualization (optional)
dash    # Productive Python framework for building web analytic applications

# Jupyter for interactive computing (optional)
jupyter    # Open-source web application that allows you to create and share documents with live code, equations, visualizations, and narrative text

# Scikit-learn for machine learning (optional)
scikit-learn    # Simple and efficient tools for predictive data analysis

# TensorFlow and PyTorch for AI/ML models (external, not internal use)
tensorflow    # End-to-end open-source platform for machine learning (only if required for external model loading)
torch    # Tensors and dynamic neural networks in Python with strong GPU acceleration (only if required for external model loading)

# Comments are included above each package to explain its purpose.
# Remove optional packages if they are not required for the initial setup.
